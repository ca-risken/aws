// Code generated by mockery v2.12.1. DO NOT EDIT.

package mocks

import (
	context "context"

	activity "github.com/ca-risken/aws/proto/activity"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// ActivityServiceServer is an autogenerated mock type for the ActivityServiceServer type
type ActivityServiceServer struct {
	mock.Mock
}

// DescribeARN provides a mock function with given fields: _a0, _a1
func (_m *ActivityServiceServer) DescribeARN(_a0 context.Context, _a1 *activity.DescribeARNRequest) (*activity.DescribeARNResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *activity.DescribeARNResponse
	if rf, ok := ret.Get(0).(func(context.Context, *activity.DescribeARNRequest) *activity.DescribeARNResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*activity.DescribeARNResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *activity.DescribeARNRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListCloudTrail provides a mock function with given fields: _a0, _a1
func (_m *ActivityServiceServer) ListCloudTrail(_a0 context.Context, _a1 *activity.ListCloudTrailRequest) (*activity.ListCloudTrailResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *activity.ListCloudTrailResponse
	if rf, ok := ret.Get(0).(func(context.Context, *activity.ListCloudTrailRequest) *activity.ListCloudTrailResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*activity.ListCloudTrailResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *activity.ListCloudTrailRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListConfigHistory provides a mock function with given fields: _a0, _a1
func (_m *ActivityServiceServer) ListConfigHistory(_a0 context.Context, _a1 *activity.ListConfigHistoryRequest) (*activity.ListConfigHistoryResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *activity.ListConfigHistoryResponse
	if rf, ok := ret.Get(0).(func(context.Context, *activity.ListConfigHistoryRequest) *activity.ListConfigHistoryResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*activity.ListConfigHistoryResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *activity.ListConfigHistoryRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewActivityServiceServer creates a new instance of ActivityServiceServer. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewActivityServiceServer(t testing.TB) *ActivityServiceServer {
	mock := &ActivityServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
