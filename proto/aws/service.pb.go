// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0-devel
// 	protoc        v3.12.1
// source: aws/service.proto

package aws

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListAWSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AwsId        uint32 `protobuf:"varint,2,opt,name=aws_id,json=awsId,proto3" json:"aws_id,omitempty"`
	AwsAccountId string `protobuf:"bytes,3,opt,name=aws_account_id,json=awsAccountId,proto3" json:"aws_account_id,omitempty"`
}

func (x *ListAWSRequest) Reset() {
	*x = ListAWSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAWSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAWSRequest) ProtoMessage() {}

func (x *ListAWSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAWSRequest.ProtoReflect.Descriptor instead.
func (*ListAWSRequest) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListAWSRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListAWSRequest) GetAwsId() uint32 {
	if x != nil {
		return x.AwsId
	}
	return 0
}

func (x *ListAWSRequest) GetAwsAccountId() string {
	if x != nil {
		return x.AwsAccountId
	}
	return ""
}

type ListAWSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aws []*AWS `protobuf:"bytes,1,rep,name=aws,proto3" json:"aws,omitempty"`
}

func (x *ListAWSResponse) Reset() {
	*x = ListAWSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAWSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAWSResponse) ProtoMessage() {}

func (x *ListAWSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAWSResponse.ProtoReflect.Descriptor instead.
func (*ListAWSResponse) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListAWSResponse) GetAws() []*AWS {
	if x != nil {
		return x.Aws
	}
	return nil
}

type PutAWSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32        `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Aws       *AWSForUpsert `protobuf:"bytes,2,opt,name=aws,proto3" json:"aws,omitempty"`
}

func (x *PutAWSRequest) Reset() {
	*x = PutAWSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAWSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAWSRequest) ProtoMessage() {}

func (x *PutAWSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAWSRequest.ProtoReflect.Descriptor instead.
func (*PutAWSRequest) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{2}
}

func (x *PutAWSRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PutAWSRequest) GetAws() *AWSForUpsert {
	if x != nil {
		return x.Aws
	}
	return nil
}

type PutAWSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aws *AWS `protobuf:"bytes,1,opt,name=aws,proto3" json:"aws,omitempty"`
}

func (x *PutAWSResponse) Reset() {
	*x = PutAWSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAWSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAWSResponse) ProtoMessage() {}

func (x *PutAWSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAWSResponse.ProtoReflect.Descriptor instead.
func (*PutAWSResponse) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{3}
}

func (x *PutAWSResponse) GetAws() *AWS {
	if x != nil {
		return x.Aws
	}
	return nil
}

type DeleteAWSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AwsId     uint32 `protobuf:"varint,2,opt,name=aws_id,json=awsId,proto3" json:"aws_id,omitempty"`
}

func (x *DeleteAWSRequest) Reset() {
	*x = DeleteAWSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAWSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAWSRequest) ProtoMessage() {}

func (x *DeleteAWSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAWSRequest.ProtoReflect.Descriptor instead.
func (*DeleteAWSRequest) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAWSRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteAWSRequest) GetAwsId() uint32 {
	if x != nil {
		return x.AwsId
	}
	return 0
}

type ListDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AwsId      uint32 `protobuf:"varint,2,opt,name=aws_id,json=awsId,proto3" json:"aws_id,omitempty"`
	DataSource string `protobuf:"bytes,3,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
}

func (x *ListDataSourceRequest) Reset() {
	*x = ListDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSourceRequest) ProtoMessage() {}

func (x *ListDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ListDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ListDataSourceRequest) GetAwsId() uint32 {
	if x != nil {
		return x.AwsId
	}
	return 0
}

func (x *ListDataSourceRequest) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

type ListDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSource []*DataSource `protobuf:"bytes,1,rep,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
}

func (x *ListDataSourceResponse) Reset() {
	*x = ListDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDataSourceResponse) ProtoMessage() {}

func (x *ListDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ListDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListDataSourceResponse) GetDataSource() []*DataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

type AttachDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        uint32               `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AttachDataSource *DataSourceForAttach `protobuf:"bytes,2,opt,name=attach_data_source,json=attachDataSource,proto3" json:"attach_data_source,omitempty"`
}

func (x *AttachDataSourceRequest) Reset() {
	*x = AttachDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachDataSourceRequest) ProtoMessage() {}

func (x *AttachDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachDataSourceRequest.ProtoReflect.Descriptor instead.
func (*AttachDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{7}
}

func (x *AttachDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *AttachDataSourceRequest) GetAttachDataSource() *DataSourceForAttach {
	if x != nil {
		return x.AttachDataSource
	}
	return nil
}

type AttachDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSource *DataSource `protobuf:"bytes,1,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
}

func (x *AttachDataSourceResponse) Reset() {
	*x = AttachDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachDataSourceResponse) ProtoMessage() {}

func (x *AttachDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachDataSourceResponse.ProtoReflect.Descriptor instead.
func (*AttachDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{8}
}

func (x *AttachDataSourceResponse) GetDataSource() *DataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

type DetachDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AwsId           uint32 `protobuf:"varint,2,opt,name=aws_id,json=awsId,proto3" json:"aws_id,omitempty"`
	AwsDataSourceId uint32 `protobuf:"varint,3,opt,name=aws_data_source_id,json=awsDataSourceId,proto3" json:"aws_data_source_id,omitempty"`
}

func (x *DetachDataSourceRequest) Reset() {
	*x = DetachDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetachDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetachDataSourceRequest) ProtoMessage() {}

func (x *DetachDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetachDataSourceRequest.ProtoReflect.Descriptor instead.
func (*DetachDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{9}
}

func (x *DetachDataSourceRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DetachDataSourceRequest) GetAwsId() uint32 {
	if x != nil {
		return x.AwsId
	}
	return 0
}

func (x *DetachDataSourceRequest) GetAwsDataSourceId() uint32 {
	if x != nil {
		return x.AwsDataSourceId
	}
	return 0
}

type InvokeScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       uint32 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	AwsId           uint32 `protobuf:"varint,2,opt,name=aws_id,json=awsId,proto3" json:"aws_id,omitempty"`
	AwsDataSourceId uint32 `protobuf:"varint,3,opt,name=aws_data_source_id,json=awsDataSourceId,proto3" json:"aws_data_source_id,omitempty"`
}

func (x *InvokeScanRequest) Reset() {
	*x = InvokeScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeScanRequest) ProtoMessage() {}

func (x *InvokeScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aws_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeScanRequest.ProtoReflect.Descriptor instead.
func (*InvokeScanRequest) Descriptor() ([]byte, []int) {
	return file_aws_service_proto_rawDescGZIP(), []int{10}
}

func (x *InvokeScanRequest) GetProjectId() uint32 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *InvokeScanRequest) GetAwsId() uint32 {
	if x != nil {
		return x.AwsId
	}
	return 0
}

func (x *InvokeScanRequest) GetAwsDataSourceId() uint32 {
	if x != nil {
		return x.AwsDataSourceId
	}
	return 0
}

var File_aws_service_proto protoreflect.FileDescriptor

var file_aws_service_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x77, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x61, 0x77, 0x73, 0x2f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6c, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x77, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x77,
	0x73, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x77, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x77, 0x73,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x03,
	0x61, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x41, 0x57, 0x53, 0x52, 0x03, 0x61, 0x77, 0x73, 0x22, 0x57, 0x0a, 0x0d,
	0x50, 0x75, 0x74, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x03,
	0x61, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x41, 0x57, 0x53, 0x46, 0x6f, 0x72, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74,
	0x52, 0x03, 0x61, 0x77, 0x73, 0x22, 0x30, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x41, 0x57, 0x53, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x61, 0x77, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x41,
	0x57, 0x53, 0x52, 0x03, 0x61, 0x77, 0x73, 0x22, 0x48, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x77,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x77, 0x73, 0x49,
	0x64, 0x22, 0x6e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x77, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x77, 0x73, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x4e, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x22, 0x84, 0x01, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x12,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61,
	0x77, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x6f, 0x72,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x50, 0x0a, 0x18, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x61, 0x77, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x7c, 0x0a, 0x17, 0x44, 0x65,
	0x74, 0x61, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x77, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x77, 0x73, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x61,
	0x77, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x77, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x77, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x77,
	0x73, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x61, 0x77, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x61, 0x77, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x32, 0x81, 0x04, 0x0a, 0x0a, 0x41, 0x57, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3c, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x57, 0x53, 0x12, 0x17, 0x2e, 0x61, 0x77, 0x73,
	0x2e, 0x61, 0x77, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x06, 0x50, 0x75, 0x74, 0x41, 0x57, 0x53, 0x12, 0x16, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77,
	0x73, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x57, 0x53,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x57, 0x53, 0x12, 0x19, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x57, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x77, 0x73,
	0x2e, 0x61, 0x77, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x77, 0x73,
	0x2e, 0x61, 0x77, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x20, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61,
	0x77, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x40, 0x0a, 0x0a, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x12, 0x1a, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x43, 0x79, 0x62, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x69,
	0x6d, 0x6f, 0x73, 0x61, 0x2d, 0x61, 0x77, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x77, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aws_service_proto_rawDescOnce sync.Once
	file_aws_service_proto_rawDescData = file_aws_service_proto_rawDesc
)

func file_aws_service_proto_rawDescGZIP() []byte {
	file_aws_service_proto_rawDescOnce.Do(func() {
		file_aws_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_aws_service_proto_rawDescData)
	})
	return file_aws_service_proto_rawDescData
}

var file_aws_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_aws_service_proto_goTypes = []interface{}{
	(*ListAWSRequest)(nil),           // 0: aws.aws.ListAWSRequest
	(*ListAWSResponse)(nil),          // 1: aws.aws.ListAWSResponse
	(*PutAWSRequest)(nil),            // 2: aws.aws.PutAWSRequest
	(*PutAWSResponse)(nil),           // 3: aws.aws.PutAWSResponse
	(*DeleteAWSRequest)(nil),         // 4: aws.aws.DeleteAWSRequest
	(*ListDataSourceRequest)(nil),    // 5: aws.aws.ListDataSourceRequest
	(*ListDataSourceResponse)(nil),   // 6: aws.aws.ListDataSourceResponse
	(*AttachDataSourceRequest)(nil),  // 7: aws.aws.AttachDataSourceRequest
	(*AttachDataSourceResponse)(nil), // 8: aws.aws.AttachDataSourceResponse
	(*DetachDataSourceRequest)(nil),  // 9: aws.aws.DetachDataSourceRequest
	(*InvokeScanRequest)(nil),        // 10: aws.aws.InvokeScanRequest
	(*AWS)(nil),                      // 11: aws.aws.AWS
	(*AWSForUpsert)(nil),             // 12: aws.aws.AWSForUpsert
	(*DataSource)(nil),               // 13: aws.aws.DataSource
	(*DataSourceForAttach)(nil),      // 14: aws.aws.DataSourceForAttach
	(*empty.Empty)(nil),              // 15: google.protobuf.Empty
}
var file_aws_service_proto_depIdxs = []int32{
	11, // 0: aws.aws.ListAWSResponse.aws:type_name -> aws.aws.AWS
	12, // 1: aws.aws.PutAWSRequest.aws:type_name -> aws.aws.AWSForUpsert
	11, // 2: aws.aws.PutAWSResponse.aws:type_name -> aws.aws.AWS
	13, // 3: aws.aws.ListDataSourceResponse.data_source:type_name -> aws.aws.DataSource
	14, // 4: aws.aws.AttachDataSourceRequest.attach_data_source:type_name -> aws.aws.DataSourceForAttach
	13, // 5: aws.aws.AttachDataSourceResponse.data_source:type_name -> aws.aws.DataSource
	0,  // 6: aws.aws.AWSService.ListAWS:input_type -> aws.aws.ListAWSRequest
	2,  // 7: aws.aws.AWSService.PutAWS:input_type -> aws.aws.PutAWSRequest
	4,  // 8: aws.aws.AWSService.DeleteAWS:input_type -> aws.aws.DeleteAWSRequest
	5,  // 9: aws.aws.AWSService.ListDataSource:input_type -> aws.aws.ListDataSourceRequest
	7,  // 10: aws.aws.AWSService.AttachDataSource:input_type -> aws.aws.AttachDataSourceRequest
	9,  // 11: aws.aws.AWSService.DetachDataSource:input_type -> aws.aws.DetachDataSourceRequest
	10, // 12: aws.aws.AWSService.InvokeScan:input_type -> aws.aws.InvokeScanRequest
	1,  // 13: aws.aws.AWSService.ListAWS:output_type -> aws.aws.ListAWSResponse
	3,  // 14: aws.aws.AWSService.PutAWS:output_type -> aws.aws.PutAWSResponse
	15, // 15: aws.aws.AWSService.DeleteAWS:output_type -> google.protobuf.Empty
	6,  // 16: aws.aws.AWSService.ListDataSource:output_type -> aws.aws.ListDataSourceResponse
	8,  // 17: aws.aws.AWSService.AttachDataSource:output_type -> aws.aws.AttachDataSourceResponse
	15, // 18: aws.aws.AWSService.DetachDataSource:output_type -> google.protobuf.Empty
	15, // 19: aws.aws.AWSService.InvokeScan:output_type -> google.protobuf.Empty
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_aws_service_proto_init() }
func file_aws_service_proto_init() {
	if File_aws_service_proto != nil {
		return
	}
	file_aws_entity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aws_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAWSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAWSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAWSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAWSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAWSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetachDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aws_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aws_service_proto_goTypes,
		DependencyIndexes: file_aws_service_proto_depIdxs,
		MessageInfos:      file_aws_service_proto_msgTypes,
	}.Build()
	File_aws_service_proto = out.File
	file_aws_service_proto_rawDesc = nil
	file_aws_service_proto_goTypes = nil
	file_aws_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AWSServiceClient is the client API for AWSService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AWSServiceClient interface {
	// AWS
	ListAWS(ctx context.Context, in *ListAWSRequest, opts ...grpc.CallOption) (*ListAWSResponse, error)
	PutAWS(ctx context.Context, in *PutAWSRequest, opts ...grpc.CallOption) (*PutAWSResponse, error)
	DeleteAWS(ctx context.Context, in *DeleteAWSRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// AWS DataSource
	ListDataSource(ctx context.Context, in *ListDataSourceRequest, opts ...grpc.CallOption) (*ListDataSourceResponse, error)
	AttachDataSource(ctx context.Context, in *AttachDataSourceRequest, opts ...grpc.CallOption) (*AttachDataSourceResponse, error)
	DetachDataSource(ctx context.Context, in *DetachDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Scan
	InvokeScan(ctx context.Context, in *InvokeScanRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type aWSServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAWSServiceClient(cc grpc.ClientConnInterface) AWSServiceClient {
	return &aWSServiceClient{cc}
}

func (c *aWSServiceClient) ListAWS(ctx context.Context, in *ListAWSRequest, opts ...grpc.CallOption) (*ListAWSResponse, error) {
	out := new(ListAWSResponse)
	err := c.cc.Invoke(ctx, "/aws.aws.AWSService/ListAWS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aWSServiceClient) PutAWS(ctx context.Context, in *PutAWSRequest, opts ...grpc.CallOption) (*PutAWSResponse, error) {
	out := new(PutAWSResponse)
	err := c.cc.Invoke(ctx, "/aws.aws.AWSService/PutAWS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aWSServiceClient) DeleteAWS(ctx context.Context, in *DeleteAWSRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/aws.aws.AWSService/DeleteAWS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aWSServiceClient) ListDataSource(ctx context.Context, in *ListDataSourceRequest, opts ...grpc.CallOption) (*ListDataSourceResponse, error) {
	out := new(ListDataSourceResponse)
	err := c.cc.Invoke(ctx, "/aws.aws.AWSService/ListDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aWSServiceClient) AttachDataSource(ctx context.Context, in *AttachDataSourceRequest, opts ...grpc.CallOption) (*AttachDataSourceResponse, error) {
	out := new(AttachDataSourceResponse)
	err := c.cc.Invoke(ctx, "/aws.aws.AWSService/AttachDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aWSServiceClient) DetachDataSource(ctx context.Context, in *DetachDataSourceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/aws.aws.AWSService/DetachDataSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aWSServiceClient) InvokeScan(ctx context.Context, in *InvokeScanRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/aws.aws.AWSService/InvokeScan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AWSServiceServer is the server API for AWSService service.
type AWSServiceServer interface {
	// AWS
	ListAWS(context.Context, *ListAWSRequest) (*ListAWSResponse, error)
	PutAWS(context.Context, *PutAWSRequest) (*PutAWSResponse, error)
	DeleteAWS(context.Context, *DeleteAWSRequest) (*empty.Empty, error)
	// AWS DataSource
	ListDataSource(context.Context, *ListDataSourceRequest) (*ListDataSourceResponse, error)
	AttachDataSource(context.Context, *AttachDataSourceRequest) (*AttachDataSourceResponse, error)
	DetachDataSource(context.Context, *DetachDataSourceRequest) (*empty.Empty, error)
	// Scan
	InvokeScan(context.Context, *InvokeScanRequest) (*empty.Empty, error)
}

// UnimplementedAWSServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAWSServiceServer struct {
}

func (*UnimplementedAWSServiceServer) ListAWS(context.Context, *ListAWSRequest) (*ListAWSResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAWS not implemented")
}
func (*UnimplementedAWSServiceServer) PutAWS(context.Context, *PutAWSRequest) (*PutAWSResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAWS not implemented")
}
func (*UnimplementedAWSServiceServer) DeleteAWS(context.Context, *DeleteAWSRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAWS not implemented")
}
func (*UnimplementedAWSServiceServer) ListDataSource(context.Context, *ListDataSourceRequest) (*ListDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDataSource not implemented")
}
func (*UnimplementedAWSServiceServer) AttachDataSource(context.Context, *AttachDataSourceRequest) (*AttachDataSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachDataSource not implemented")
}
func (*UnimplementedAWSServiceServer) DetachDataSource(context.Context, *DetachDataSourceRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachDataSource not implemented")
}
func (*UnimplementedAWSServiceServer) InvokeScan(context.Context, *InvokeScanRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeScan not implemented")
}

func RegisterAWSServiceServer(s *grpc.Server, srv AWSServiceServer) {
	s.RegisterService(&_AWSService_serviceDesc, srv)
}

func _AWSService_ListAWS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAWSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AWSServiceServer).ListAWS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aws.aws.AWSService/ListAWS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AWSServiceServer).ListAWS(ctx, req.(*ListAWSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AWSService_PutAWS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAWSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AWSServiceServer).PutAWS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aws.aws.AWSService/PutAWS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AWSServiceServer).PutAWS(ctx, req.(*PutAWSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AWSService_DeleteAWS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAWSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AWSServiceServer).DeleteAWS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aws.aws.AWSService/DeleteAWS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AWSServiceServer).DeleteAWS(ctx, req.(*DeleteAWSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AWSService_ListDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AWSServiceServer).ListDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aws.aws.AWSService/ListDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AWSServiceServer).ListDataSource(ctx, req.(*ListDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AWSService_AttachDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AWSServiceServer).AttachDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aws.aws.AWSService/AttachDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AWSServiceServer).AttachDataSource(ctx, req.(*AttachDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AWSService_DetachDataSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetachDataSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AWSServiceServer).DetachDataSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aws.aws.AWSService/DetachDataSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AWSServiceServer).DetachDataSource(ctx, req.(*DetachDataSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AWSService_InvokeScan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeScanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AWSServiceServer).InvokeScan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/aws.aws.AWSService/InvokeScan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AWSServiceServer).InvokeScan(ctx, req.(*InvokeScanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AWSService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "aws.aws.AWSService",
	HandlerType: (*AWSServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAWS",
			Handler:    _AWSService_ListAWS_Handler,
		},
		{
			MethodName: "PutAWS",
			Handler:    _AWSService_PutAWS_Handler,
		},
		{
			MethodName: "DeleteAWS",
			Handler:    _AWSService_DeleteAWS_Handler,
		},
		{
			MethodName: "ListDataSource",
			Handler:    _AWSService_ListDataSource_Handler,
		},
		{
			MethodName: "AttachDataSource",
			Handler:    _AWSService_AttachDataSource_Handler,
		},
		{
			MethodName: "DetachDataSource",
			Handler:    _AWSService_DetachDataSource_Handler,
		},
		{
			MethodName: "InvokeScan",
			Handler:    _AWSService_InvokeScan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aws/service.proto",
}
