name: Post Submit

on:
  pull_request:
    branches:
      - master
    types:
      - closed

permissions:
  id-token: write
  contents: read

jobs:
  Push:
    runs-on: ubuntu-latest
    env:
      IMAGE_REGISTRY_PATH: ${{ secrets.IMAGE_REGISTRY_PREFIX }}/risken-aws
      GO_VERSION: 1.14
    if: github.event.pull_request.merged == true
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: deploy-role-session
          aws-region: ap-northeast-1
      - run: aws sts get-caller-identity
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set token for access internal repository
        run: git config --global url."https://${{ secrets.GO_MODULES_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"

      - name: Setup golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Tests
        run: make go-test -j

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.sha }}
            ${{ runner.os }}-buildx-
            refs/head/master

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Push AccssAnalyzer Images
        uses: docker/build-push-action@v2
        with:
          context: src/access-analyzer
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY_PATH }}/access-analyzer:${{ github.sha }}
            ${{ env.IMAGE_REGISTRY_PATH }}/access-analyzer:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          secrets: |
            "GITHUB_TOKEN=${{ secrets.GO_MODULES_TOKEN }}"
            "GITHUB_USER=${{ secrets.GO_MODULES_USER }}"

      - name: Push Activity Images
        uses: docker/build-push-action@v2
        with:
          context: src/activity
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY_PATH }}/activity:${{ github.sha }}
            ${{ env.IMAGE_REGISTRY_PATH }}/activity:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          secrets: |
            "GITHUB_TOKEN=${{ secrets.GO_MODULES_TOKEN }}"
            "GITHUB_USER=${{ secrets.GO_MODULES_USER }}"

      - name: Push AdminChecker Images
        uses: docker/build-push-action@v2
        with:
          context: src/admin-checker
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY_PATH }}/admin-checker:${{ github.sha }}
            ${{ env.IMAGE_REGISTRY_PATH }}/admin-checker:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          secrets: |
            "GITHUB_TOKEN=${{ secrets.GO_MODULES_TOKEN }}"
            "GITHUB_USER=${{ secrets.GO_MODULES_USER }}"

      - name: Push AWS Images
        uses: docker/build-push-action@v2
        with:
          context: src/aws
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY_PATH }}/aws:${{ github.sha }}
            ${{ env.IMAGE_REGISTRY_PATH }}/aws:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          secrets: |
            "GITHUB_TOKEN=${{ secrets.GO_MODULES_TOKEN }}"
            "GITHUB_USER=${{ secrets.GO_MODULES_USER }}"

      - name: Push CloudSploit Images
        uses: docker/build-push-action@v2
        with:
          context: src/cloudsploit
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY_PATH }}/cloudsploit:${{ github.sha }}
            ${{ env.IMAGE_REGISTRY_PATH }}/cloudsploit:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          secrets: |
            "GITHUB_TOKEN=${{ secrets.GO_MODULES_TOKEN }}"
            "GITHUB_USER=${{ secrets.GO_MODULES_USER }}"

      - name: Push GuardDuty Images
        uses: docker/build-push-action@v2
        with:
          context: src/guard-duty
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY_PATH }}/guard-duty:${{ github.sha }}
            ${{ env.IMAGE_REGISTRY_PATH }}/guard-duty:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          secrets: |
            "GITHUB_TOKEN=${{ secrets.GO_MODULES_TOKEN }}"
            "GITHUB_USER=${{ secrets.GO_MODULES_USER }}"

      - name: Push PortScan Images
        uses: docker/build-push-action@v2
        with:
          context: src/portscan
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY_PATH }}/portscan:${{ github.sha }}
            ${{ env.IMAGE_REGISTRY_PATH }}/portscan:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          secrets: |
            "GITHUB_TOKEN=${{ secrets.GO_MODULES_TOKEN }}"
            "GITHUB_USER=${{ secrets.GO_MODULES_USER }}"
