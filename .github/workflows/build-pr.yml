name: RISKEN AWS Build PR

permissions:
  contents: read
  checks: write
  statuses: write

env:
  IMAGE_PREFIX: "risken-aws"
  INSTALL_GO_VERSION: "1.21.3"
  GOLANGCI_LINT_VERSION: v1.55.2

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    
jobs:
  build-pr:
    runs-on:
      - codebuild-mimosa-aws-pr-ruuner-${{ github.run_id }}-${{ github.run_attempt }}
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        run: |
          echo "SRC=${GITHUB_WORKSPACE}/src" >> $GITHUB_ENV
          echo "BUILD_OPT=--no-cache --pull" >> $GITHUB_ENV
          echo "TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      - name: Install Go and tools
        run: |
          cd /root/.goenv && git pull && cd -
          goenv install ${{ env.INSTALL_GO_VERSION }}
          goenv global ${{ env.INSTALL_GO_VERSION }}
          go version
          
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin ${{ env.GOLANGCI_LINT_VERSION }}
          mv $(go env GOPATH)/bin/golangci-lint /usr/local/bin/
          golangci-lint --version
      
      - name: Lint and test
        run: |
          echo "Lint the sources..."
          make lint -k
          echo "Testing the sources..."
          make go-test -j

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Docker build and tag
        run: |
          echo "Build gateway started on $(date)"
          make build-ci -j BUILD_OPT="${BUILD_OPT}" IMAGE_TAG=${TAG} IMAGE_PREFIX=${{ env.IMAGE_PREFIX }} IMAGE_REGISTRY=${{ secrets.DOCKER_REGISTRY }}
